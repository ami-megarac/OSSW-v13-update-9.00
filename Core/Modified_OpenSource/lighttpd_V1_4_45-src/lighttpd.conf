server.modules              = ("mod_fastcgi", "mod_setenv","mod_access")
server.upload-dirs = ( "/usr/local/lmedia/lost+found", "/tmp" )

server.document-root        = "/usr/local/www"
server.pid-file = "/var/run/lighttpd.pid"

# files to check for if .../ is requested
index-file.names            = ( "home.html","index.php", "index.html",
                                "index.htm", "default.htm", "index.html.gz","viewer.html")

server.error-handler-404 = "/index.html"

debug.log-request-handling = "disable"
debug.log-state-handling = "disable"
debug.log-request-header="enable"
debug.log-response-header="enable"

server.max-read-idle = 120
server.max-keep-alive-idle = 120
evasive.max-conns-per-ip = 30
#Optimizing Performance in Lighttpd
server.event-handler = "linux-sysepoll"
server.network-backend = "writev"
fastcgi.debug = 1

# mimetype mapping
mimetype.assign             = (
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".map"          =>  	  "application/octet-stream",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".xml"          =>      "text/xml",
  ".elg"          =>      "application/x-ibmclog",
  ".jnlp"         =>      "application/x-java-jnlp-file",
  ".gz"      	  =>      "application/x-gzip",
  ".tar.gz"  	  =>      "application/x-gzip-compressed-tar"
 )

server.tag = "lighttpd"

## SSL Engine
$SERVER["socket"] == ":443" {
  ssl.engine = "enable"
  server.use-ipv6 = "enable"
  ssl.dh-file   = "/conf/certs/dhparam.pem"
  ssl.pemfile   = "/conf/server.pem"
  ssl.ca-file   = "/conf/intermediate.pem"
  ssl.cipher-list =  "TLSv1.2 !SHA384 !SHA256 !RSA !SHA !aNULL !eNULL !EXPORT !DES !SSLv2 !3DES !RC4 !MD5 !PSK !DHE"
  ssl.openssl.ssl-conf-cmd = ("MinProtocol" => "TLSv1.2")
}

#Block file download using direct URL
$HTTP["url"] !~ "^/api/|^/redfish" {
        $HTTP["host"] !~ "169.254.0.17" {
            url.access-deny = ( ".xml" ,".jnlp" , ".dat" )
        }
}


$HTTP["url"] !~ "^/api|^/ext|^/redfish|^/wsman|\.png|\.jar$" {
##$HTTP["url"] =~ "\.js$|\.html$|\.css$|\.png$|\.woff$|\.jpg$|^/$" {
setenv.add-response-header += ( "Content-Encoding" => "gzip","X-Frame-Options" => "SAMEORIGIN")
setenv.add-response-header += ( "X-Content-Type-Options" => "nosniff" )
setenv.add-response-header += ( "X-XSS-Protection" => "1; mode=block" )
setenv.add-response-header += ( "Referrer-Policy" => "no-referrer" )
setenv.add-response-header += ( "Content-Security-Policy" => "default-src 'self';object-src 'none';connect-src 'self' ws: wss:;style-src 'self';script-src 'self'; img-src 'self' blob:;frame-ancestors 'self';font-src 'self'")
setenv.add-response-header += ("Strict-Transport-Security" => "max-age=31536000; includeSubDomains; preload")
}

$HTTP["url"] !~ "^/api|^/ext|^/redfish|^/wsman|^/fonts|\.png|\.jar$" {
setenv.add-response-header += ( "Content-Encoding" => "gzip","X-Frame-Options" => "SAMEORIGIN")
setenv.add-response-header += ( "Cache-Control" => "no-store, no-cache, must-revalidate, private" )
setenv.add-response-header += ( "Pragma" => "no-cache" )
setenv.add-response-header += ( "X-Content-Type-Options" => "nosniff" )
setenv.add-response-header += ( "X-XSS-Protection" => "1; mode=block" )
setenv.add-response-header += ( "Referrer-Policy" => "no-referrer" )
setenv.add-response-header += ( "Content-Security-Policy" => "default-src 'self';object-src 'none';connect-src 'self' ws: wss:;style-src 'self';script-src 'self'; img-src 'self' blob:;frame-ancestors 'self';font-src 'self'")
setenv.add-response-header += ("Strict-Transport-Security" => "max-age=31536000; includeSubDomains; preload")
}
##set cache control to no only for url with /api/
$HTTP["url"] =~ "^/api|^/ext|^/archive|\.png$" {
setenv.add-response-header += ( "X-Frame-Options" => "SAMEORIGIN")
setenv.add-response-header += ( "Cache-Control" => "no-store, no-cache, must-revalidate, private" )
setenv.add-response-header += ( "Pragma" => "no-cache" )
setenv.add-response-header += ( "X-Content-Type-Options" => "nosniff" )
setenv.add-response-header += ( "X-XSS-Protection" => "1; mode=block" )
setenv.add-response-header += ( "Referrer-Policy" => "no-referrer" )
setenv.add-response-header += ( "Content-Security-Policy" => "default-src 'self';object-src 'none';connect-src 'self' ws: wss:;style-src 'self';script-src 'self'; img-src 'self' blob:;frame-ancestors 'self';font-src 'self'")
setenv.add-response-header += ("Strict-Transport-Security" => "max-age=31536000; includeSubDomains; preload")
}

